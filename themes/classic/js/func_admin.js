function findActiveLangFields(obj){    var curent_lang = obj.attr("id");    var langswith = obj.closest(".lang_swith");    var curentform = langswith.closest("form");    langswith.find("li").each(function(){        var this_lang = $(this).find("a").attr("id");        if (this_lang == curent_lang){            $(this).removeClass("inactive").addClass("active");            curentform.find(".lang_"+this_lang).show();        }        else{            $(this).removeClass("active").addClass("inactive");            curentform.find(".lang_"+this_lang).hide();        }     });}function addImage(){    $.ajax({        url: getLangPrefix()+'images.html',        data: {'submit_create':'new'},        type: 'post',        success: function (data) {            $("#modal").html(data).modal({backdrop: false},'show');        }    });}function addProtectedImage(){    $.ajax({        url: getLangPrefix()+'images.html?protected=1',        data: {'submit_create':'new'},        type: 'post',        success: function (data) {            $("#modal").html(data).modal({backdrop: false},'show');        }    });}function showAllSpoilers(obj){    if(obj.length){        if(obj.hasClass('inactive')){            obj.removeClass('inactive').addClass("active").text(" -Скрыть все поля");        }else{            obj.removeClass('active').addClass("inactive").text(" +Показать все поля");        }        $("fieldset.spoiler .switch-spoiler").each(function(){            showSpoiler($(this),status);        })    }}function showSpoiler(spoiler){    var spoiler_content = spoiler.closest("fieldset.spoiler").find(".spoiler-content");        if(spoiler.hasClass('inactive')){            spoiler_content.slideDown(); spoiler.removeClass('inactive').addClass("active").text(" -Скрыть");    }else{        spoiler_content.slideUp(); spoiler.removeClass('active').addClass("inactive").text(" +Показать");    }}function deleteImage(obj){    var box = $(obj).parent();    var image = box.find("input").attr("id");	var clone_input = box.find("input").clone();	box.html("<input id='"+clone_input.attr('id')+"' type='file' name='"+clone_input.attr('name')+"' value=''>")}function deleteImageFromGallery(obj){    $(obj).parent().remove();}$(document).ready(function() {	if($("#switch-all-spoiler").length && !$(".switch-spoiler").length) $("#switch-all-spoiler").remove();    $("#switch-all-spoiler").click(function(){        showAllSpoilers($(this));    });        $("#adminmenu").addClass("inactive");    $("#adminmenu .layer").bind("click", function(){        if ($("#adminmenu").hasClass("inactive")){            $( "#adminmenu" ).animate({bottom: "+=50"}, 500, function() {$(this).removeClass("inactive");});        }        else {            $( "#adminmenu" ).animate({bottom: "-=50"}, 500, function() {$(this).addClass("inactive");});        }    })    $("<div id='infobox'><img src='/images/progress.gif' /> Идет загрузка данных</div>").appendTo("body");    $("#infobox").dialog({ modal: true, minWidth: 600, autoOpen: false,resizable: false, title:"Информация" });    if ($(".tablesorter").length) $(".tablesorter").tablesorter({widgets: ['zebra'] });        $("#show_page_settings").click(function(){            if ($("#wrap_page_settings").is(":visible")){                    $("#wrap_page_settings").hide();                         $(this).html(" + Показать настройки раздела");                }            else {                    $("#wrap_page_settings").show();                        $(this).html(" - Скрыть настройки раздела");                }    });        $("body").delegate(".lang_swith a", "click", function(event){        event.preventDefault();        findActiveLangFields($(this));    });})function var_dump(arr,level) {  var dumped_text = "";  if(!level) level = 0;  //The padding given at the beginning of the line.  var level_padding = "";  for(var j=0;j<level+1;j++) level_padding += "    ";  if(typeof(arr) == 'object') { //Array/Hashes/Objects   for(var item in arr) {    var value = arr[item];       if(typeof(value) == 'object') { //If it is an array,     dumped_text += level_padding + "'" + item + "' ...\n";     dumped_text += var_dump(value,level+1);    } else {     dumped_text += level_padding + "'" + item + "' => \"" + value + "\"\n";    }   }  } else { //Stings/Chars/Numbers etc.   dumped_text = "===>"+arr+"<===("+typeof(arr)+")";  }  return dumped_text;}